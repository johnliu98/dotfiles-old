#!/bin/sh

# Prints all batteries, their percentage remaining and an emoji corresponding
# to charge status (🔌 for plugged up, 🔋 for discharging on battery, etc.).

case $BUTTON in
	1) notify-send "Not implemented..." ;;
	3) notify-send "🔋 Battery" "🔋: discharging\n♻: stagnant charge\n🔌: charging\n⚡: charged\n❗: battery very low!" ;;
	6) "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

# Loop through all attached batteries and format the info
for battery in /sys/class/power_supply/BAT?*; do
	# If non-first battery, print a space separator.
	[ -n "${capacity+x}" ] && printf " "
	# Sets up the status and capacity
	capacity="$(cat "$battery/capacity" 2>&1)"
	case "$(cat "$battery/status" 2>&1)" in
		"Full") status=" " ;;
		"Discharging")
        case "$capacity" in
            100)            status=" " ;;
            9[0-9])         status=" " ;;
            8[0-9])         status=" " ;;
            7[0-9])         status=" " ;;
            6[0-9])         status=" " ;;
            5[0-9])         status=" " ;;
            4[0-9])         status=" " ;;
            3[0-9])         status=" " ;;
            2[0-9])         status=" " ;;
            *)              status=" " ;;
        esac ;;
		"Charging")
        case "$capacity" in
            100)            status=" " ;;
            9[0-9])         status=" " ;;
            8[0-9])         status=" " ;;
            6[0-9]|7[0-9])  status=" " ;;
            4[0-9]|5[0-9])  status=" " ;;
            3[0-9])         status=" " ;;
            *)              status=" " ;;
        esac ;;
		"Not charging") status="🛑" ;;
		"Unknown") status="屢 " ;;
		*) exit 1 ;;
	esac
	# Prints the info
	printf "%s%d%%" "$status" "$capacity"
done
